brooklyn.catalog:
  version: "2.1.0-SNAPSHOT" # CLOCKER_VERSION
  publish:
    description: |
      HAProxy load balancer
    license_code: APACHE-2.0

  items:
    - id: haproxy-load-balancer-template
      name: "HAProxy Load Balancer"
      description: |
        HAProxy load balancer entity
      itemType: template
      iconUrl: classpath://io.brooklyn.clocker.common:icons/haproxy.png
      item:
        services:
          - type: haproxy-load-balancer

    - id: haproxy-load-balancer
      name: "HAProxy Load Balancer"
      description: |
        HAProxy load balancer entity
      itemType: entity
      iconUrl: classpath://io.brooklyn.clocker.common:icons/haproxy.png
      item:
        type: centos-software-process
        name: "haproxy-load-balancer"

        brooklyn.parameters:
          - name: haproxy.version
            label: "HAProxy Version"
            description: |
              The HAProxy version to install
            type: string
            default: "1.6.7"
          - name: haproxy.port
            label: "HAProxy Port"
            description: |
              Port that HAProxy should listen on
            type: integer
            default: 8000
          - name: haproxy.protocol
            label: "HAProxy Protocol"
            description: |
              Protocol to forward (either http or https)
            type: string
            default: "http"
          - name: haproxy.bind.options
            label: "HAProxy Bind Options"
            description: |
              Extra bind configuration such as TLS certificate paths
            type: string

        brooklyn.config:
          haproxy.bind.options:

          shell.env:
            HOST_ADDRESS: $brooklyn:attributeWhenReady("host.address")
            SUBNET_ADDRESS: $brooklyn:attributeWhenReady("host.subnet.address")
            INSTALL_DIR: $brooklyn:attributeWhenReady("install.dir")
            RUN_DIR: $brooklyn:attributeWhenReady("run.dir")
            HAPROXY_VERSION: $brooklyn:config("haproxy.version")
            HAPROXY_PORT: $brooklyn:config("haproxy.port")
            HAPROXY_PROTOCOL: $brooklyn:config("haproxy.protocol")
            HAPROXY_BIND_OPTIONS: $brooklyn:config("haproxy.bind.options")

          install.command: |
            sudo yum install -y gcc make openssl-devel wget util-linux
            haproxy_major_minor=$(echo ${HAPROXY_VERSION} | cut -d. -f1,2)
            wget "http://www.haproxy.org/download/${haproxy_major_minor}/src/haproxy-${HAPROXY_VERSION}.tar.gz"
            tar zxf haproxy-${HAPROXY_VERSION}.tar.gz
            cd haproxy-${HAPROXY_VERSION}
            make TARGET=linux26 USE_OPENSSL=true
            sudo cp haproxy /usr/bin

          customize.command: |
            if [ "${HAPROXY_PROTOCOL}" == "http" ]; then
              mode="http"
            else
              mode="tcp"
            fi
            cat > haproxy.conf <<-EOF
            global
              daemon
              quiet
              maxconn 1024
              pidfile ${PID_FILE}
            defaults
              option http-server-close
              timeout connect 5000ms
              timeout client 60s
              timeout server 60s
            frontend www-${HAPROXY_PROTOCOL}
              bind *:${HAPROXY_PORT} ${HAPROXY_BIND_OPTIONS}
              reqadd X-Forwarded-Proto:\ ${HAPROXY_PROTOCOL}
              default_backend servers
              mode ${mode}
            EOF
            echo "backend servers" > servers.conf

          launch.command: |
            haproxy -f haproxy.conf -f servers.conf -c &&
              haproxy -D -f haproxy.conf -f servers.conf -sf $(cat ${PID_FILE})

        brooklyn.initializers:
        - type: org.apache.brooklyn.core.effector.ssh.SshCommandEffector
          brooklyn.config:
            name: configureEndpoints
            description: |
              Generate HAProxy configuration from endpoint list
            shell.env:
              HAPROXY_PROTOCOL: $brooklyn:config("haproxy.protocol")
              HAPROXY_ENDPOINTS: $brooklyn:attributeWhenReady("haproxy.endpoints")
              ENTITY_ID: $brooklyn:attributeWhenReady("entity.id")
            command: |
              (
              flock 9
              cat > ${RUN_DIR}/servers.conf <<-EOF
              backend servers
              EOF
              if [ "${HAPROXY_PROTOCOL}" == "http" ]; then
                cat >> ${RUN_DIR}/servers.conf <<-EOF
                mode http
                option httpchk
              EOF
              fi
              cat >> ${RUN_DIR}/servers.conf <<-EOF
                balance roundrobin
              EOF
              for endpoint in $(echo ${HAPROXY_ENDPOINTS} | tr ',' ' ') ; do
                if [ "${HAPROXY_PROTOCOL}" == "http" ]; then
                  echo "  server node$((++n)) ${endpoint} check" >> ${RUN_DIR}/servers.conf
                else
                  echo "  server node$((++n)) ${endpoint} maxconn 32 ssl ca-file ${RUN_DIR}/ca.pem crt ${RUN_DIR}/cert.pem" >> ${RUN_DIR}/servers.conf
                fi
              done
              old_pid=$(cat ${RUN_DIR}/pid.txt)
              haproxy -D -f ${RUN_DIR}/haproxy.conf -f ${RUN_DIR}/servers.conf -st ${old_pid} 9>/dev/null
              # wait for the old process to die before leaving the critical section
              while test -d /proc/${old_pid} 2> /dev/null; do sleep 1; done
              ) 9>> /tmp/configure.${ENTITY_ID}.lock

        brooklyn.policies:
        - type: org.apache.brooklyn.policy.InvokeEffectorOnSensorChange
          brooklyn.config:
            effector: configureEndpoints
            sensor: $brooklyn:sensor("haproxy.endpoints")
        - type: org.apache.brooklyn.policy.InvokeEffectorOnSensorChange
          brooklyn.config:
            effector: configureEndpoints
            sensor: $brooklyn:sensor("service.isUp")
