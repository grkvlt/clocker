brooklyn.catalog:
  version: "2.0.0-SNAPSHOT"
  iconUrl: https://raw.githubusercontent.com/docker-library/docs/c350af05d3fac7b5c3f6327ac82fe4d990d8729c/docker/logo.png

  publish:
    description: Resources for working with Docker containers from Apache Brooklyn
    license_code: Apache-2.0
    overview: README.md

  items:

  - id: docker-swarm-template
    name: "Docker Swarm with Discovery and CA"
    description: |
      Creates a Swarm of Docker engines, of configurable initial size, using an Etcd cluster for discovery.
    itemType: template
    item:
      services:
      - type: docker-swarm

  - id:  docker-swarm
    name: "Docker Swarm with Discovery and CA"
    description: |
      Creates a Swarm of Docker engines, of configurable initial size, using an Etcd cluster for discovery.
    itemType: entity
    item:
      type: org.apache.brooklyn.entity.stock.BasicApplication

      brooklyn.parameters:
      - name: swarm.initial.size
        label: Initial Swarm Size
        description: Size of the swarm when created initially
        type: java.lang.Integer
        default: 1
      - name: etcd.initial.size
        label: Initial Etcd Size
        description: Size of the etcd when created initially
        type: java.lang.Integer
        default: 1
      - name: swarm.defaultnetwork
        label: Swarm Default Network
        description: |
          The name of a default network to create on startup
        type: java.lang.String
        default: "brooklyn"

      brooklyn.enrichers:
      - type: org.apache.brooklyn.enricher.stock.Propagator
        brooklyn.config:
          uniqueTag: swarm-url-propagator
          producer: $brooklyn:child("swarm-cluster")
          propagating:
          - $brooklyn:sensor("swarm.url")
      - type: org.apache.brooklyn.enricher.stock.Propagator
        brooklyn.config:
          uniqueTag: swarm-nw-propagator
          producer: $brooklyn:child("swarm-cluster")
          propagating:
          - $brooklyn:sensor("swarm.url")

      brooklyn.children:
      - type: ca-server
        id: ca-server
        name: "ca-server"
      - type: etcd-cluster
        id: etcd-cluster
        name: "etcd-cluster"
        initialSize: $brooklyn:config("etcd.initial.size")
      - type: docker-swarm-cluster
        id: swarm-cluster
        name: "swarm-cluster"
        brooklyn.config:
          discovery.url:   $brooklyn:entity("etcd-cluster").attributeWhenReady("etcd.authority")
          ca.request.root: $brooklyn:entity("ca-server").attributeWhenReady("main.uri")
          customize.latch: $brooklyn:entity("ca-server").attributeWhenReady("service.isUp")
          launch.latch:    $brooklyn:entity("etcd-cluster").attributeWhenReady("service.isUp")


  - id:  docker-swarm-cluster
    name: "Docker Swarm Cluster"
    description: |
      Creates a Swarm of Docker engines, of configurable initial size.
      Requires a pre-existing discovery mechanism and references to a CA server entity.
    itemType: entity
    item:
      type: org.apache.brooklyn.entity.stock.BasicApplication

      brooklyn.parameters:
      - name: swarm.initial.size
        label: Initial Swarm Size
        description: Size of the swarm when created initially
        type: java.lang.Integer
        default: 1
      - name: discovery.url
        label: Discovery URL
        description: URL of a provided discovery mechanism for the swarm
        type: java.lang.String
      - name: ca.cert.url
        label: CA Certificate URL
        description: Location of the CA certificate to install for authentication of this engine
      - name: node.cert.url
        label: Certificate URL
        description: Location of the public key certificate to install for this engine
      - name: private.key.url
        label: Private Key URL
        description: Location of the private key to install for authentication of this engine
      - name: swarm.defaultnetwork
        label: Swarm Default Network
        description: |
          The name of a default network to create on startup
        type: java.lang.String
        default: "brooklyn"

      brooklyn.config:
        manager.port: 3376

      brooklyn.enrichers:
      - type: org.apache.brooklyn.enricher.stock.Transformer
        brooklyn.config:
          uniqueTag: swarm-url-publisher
          enricher.producer: $brooklyn:entity("swarm-manager")
          enricher.sourceSensor: $brooklyn:sensor("host.address")
          enricher.targetSensor: $brooklyn:sensor("swarm.url")
          enricher.targetValue:
            $brooklyn:formatString:
            - "tcp://%s:%d"
            - $brooklyn:entity("swarm-manager").attributeWhenReady("host.address")
            - $brooklyn:config("manager.port")

      brooklyn.children:
      - type: docker-swarm-manager
        id: swarm-manager
        name: "swarm-manager"
      - type: cluster
        id: docker-cluster
        name: "docker-swarm-nodes"
        initialSize: $brooklyn:config("swarm.initial.size")
        memberSpec:
          $brooklyn:entitySpec:
            type: docker-swarm-node
            id: swarm-node
            name: "swarm-node"


  - id: docker-swarm-node
    name: "Docker Swarm Node"
    description:  |
      A Docker Swarm member node
    itemType: entity
    item:
      type: docker-engine-tls

      brooklyn.parameters:
      - name: tls.port
        description: The docker TLS port to listen on.
        type: port
        default: 2376

      brooklyn.config:
        tls.port: 2376

      env:
        DISCOVERY_URL: $brooklyn:config("discovery.url")
        HOST_ADDRESS: $brooklyn:attributeWhenReady("host.address")
        HOST_NAME: $brooklyn:attributeWhenReady("host.name")
        CA_CERT_ROOT: $brooklyn:config("ca.request.root")
        CA_CERT_URL: $brooklyn:config("ca.cert.url")
        NODE_CERT_URL: $brooklyn:config("node.cert.url")
        PRIV_KEY_URL: $brooklyn:config("private.key.url")
        TLS_PORT: $brooklyn:config("tls.port")
        DOCKER_HOST: $brooklyn:config("docker.url")
        DOCKER_ADDITIONAL_OPTIONS: $brooklyn:config("docker.additionaloptions")
        INSTALL_DIR: $brooklyn:attributeWhenReady("install.dir")
        TLS_OPTIONS:
          $brooklyn:formatString:
          - "--tlsverify --tlscacert=%1$s/.certs/ca.pem --tlscert=%1$s/.certs/cert.pem --tlskey=%1$s/.certs/key.pem"
          - $brooklyn:attributeWhenReady("install.dir")

      # TODO - decide if it's ok to publicise the HOST_NAME below and in the manager, from a security point of view.
      # TODO - remove the -p 12375 mapping below when Duncan's JClouds fixes are in. See https://github.com/cloudsoft/container-service/pull/5#discussion_r64581324
      post.launch.command: |
         docker -H tcp://${HOST_ADDRESS}:${TLS_PORT} ${TLS_OPTIONS} run -d -p 12375:2375 --name swarm-${HOST_NAME} \
           swarm join --addr=${HOST_ADDRESS}:${TLS_PORT} ${DISCOVERY_URL}
      checkRunning.command: |
        sudo service docker status && 
          docker -H tcp://${HOST_ADDRESS}:${TLS_PORT} ${TLS_OPTIONS} ps | grep swarm
      stop.command: |
        docker -H tcp://${HOST_ADDRESS}:${TLS_PORT} ${TLS_OPTIONS} stop swarm-${HOST_NAME}
        docker -H tcp://${HOST_ADDRESS}:${TLS_PORT} ${TLS_OPTIONS} rm swarm-${HOST_NAME}
        sudo service docker stop


  - id: docker-swarm-manager
    name: "Docker Swarm Manager"
    description:  The Swarm manager engine for running Docker containers
    itemType: entity
    item:
      type: docker-engine-tls

      brooklyn.parameters:
      - name: tls.port
        description: The docker TLS port to listen on.
        type: port
        default: 2376
      - name: manager.port
        label: Manager Port
        description: External port of the swarm manager
        type: port
        default: 3376

      brooklyn.config:
        tls.port: 2376
        manager.port: 3376

      env:
        DISCOVERY_URL: $brooklyn:config("discovery.url")
        HOST_ADDRESS: $brooklyn:attributeWhenReady("host.address")
        HOST_NAME: $brooklyn:attributeWhenReady("host.name")
        CA_CERT_ROOT:  $brooklyn:config("ca.request.root")
        CA_CERT_URL: $brooklyn:config("ca.cert.url")
        NODE_CERT_URL: $brooklyn:config("node.cert.url")
        PRIV_KEY_URL: $brooklyn:config("private.key.url")
        TLS_PORT: $brooklyn:config("tls.port")
        MAN_PORT: $brooklyn:config("manager.port")
        DOCKER_HOST: $brooklyn:config("docker.url")
        DOCKER_ADDITIONAL_OPTIONS: $brooklyn:config("docker.additionaloptions")
        INSTALL_DIR: $brooklyn:attributeWhenReady("install.dir")
        TLS_OPTIONS:
          $brooklyn:formatString:
          - "--tlsverify --tlscacert=%1$s/.certs/ca.pem --tlscert=%1$s/.certs/cert.pem --tlskey=%1$s/.certs/key.pem"
          - $brooklyn:attributeWhenReady("install.dir")
        SWARM_DEFAULT_NETWORK: $brooklyn:config("swarm.defaultnetwork")

      # TODO - remove the -p 12375 mapping below when Duncan's JClouds fixes are in. See https://github.com/cloudsoft/container-service/pull/5#discussion_r64581324
      post.launch.command: |
        docker -H tcp://${HOST_ADDRESS}:${TLS_PORT} ${TLS_OPTIONS} \
          run -d -p ${MAN_PORT}:${MAN_PORT} -p 12375:2375 -v ${INSTALL_DIR}/.certs:/certs:ro --name manager-${HOST_NAME} \
          swarm manage --tlsverify --tlscacert=/certs/ca.pem --tlscert=/certs/cert.pem --tlskey=/certs/key.pem --host=0.0.0.0:${MAN_PORT} ${DISCOVERY_URL}
        echo "[CLOCKER] Setup default ${SWARM_DEFAULT_NETWORK} overlay network"
        docker -H tcp://${HOST_ADDRESS}:${TLS_PORT} ${TLS_OPTIONS} network ls | grep "overlay.*${SWARM_DEFAULT_NETWORK}" ||
          docker -H tcp://${HOST_ADDRESS}:${TLS_PORT} ${TLS_OPTIONS} network create --driver=overlay "${SWARM_DEFAULT_NETWORK}"

      checkRunning.command: |
        sudo service docker status && 
          docker -H tcp://${HOST_ADDRESS}:${TLS_PORT} ${TLS_OPTIONS} ps | grep swarm

      stop.command: |
        docker -H tcp://${HOST_ADDRESS}:${TLS_PORT} ${TLS_OPTIONS} stop manager-${HOST_NAME}
        docker -H tcp://${HOST_ADDRESS}:${TLS_PORT} ${TLS_OPTIONS} rm manager-${HOST_NAME}
        sudo service docker stop
