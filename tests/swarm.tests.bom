brooklyn.catalog:
  version: 2.0.0_SNAPSHOT
  dependsOn: ["common.tests.bom"]
  iconUrl: https://raw.githubusercontent.com/docker-library/docs/c350af05d3fac7b5c3f6327ac82fe4d990d8729c/docker/logo.png
  license_code: TODO
  license_url: TODO
  items:

  # Convenience entities

  - id: test-docker-client
    item:
      type: server
      pre.install.command: |
        # Install docker so we can use it as a client
        sudo yum -y update
        sudo tee /etc/yum.repos.d/docker.repo <<-'EOF'
        [dockerrepo]
        name=Docker Repository
        baseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/
        enabled=1
        gpgcheck=1
        gpgkey=https://yum.dockerproject.org/gpg
        EOF
        sudo yum -y install docker-engine

  - id: test-connect-fails-without-tls
    item:
      type: org.apache.brooklyn.test.framework.TestCase
      name: Verify Connect Fails without TLS
      brooklyn.parameters:
        - name: swarm.url
          description: URL of the swarm endpoint
      brooklyn.children:
      - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
        command:
          $brooklyn:formatString:
          - "docker -H %s ps -a"
          - $brooklyn:config("swarm.url")
        assertStatus:
          equals: 1
        assertErr:
          contains: Are you trying to connect to a TLS-enabled daemon without TLS?


  - id: test-connect-succeeds-with-tls
    item:
      type: org.apache.brooklyn.test.framework.TestCase
      name: Test Connect Succeeds with TLS
      brooklyn.parameters:
        - name: swarm.url
          description: URL of the swarm endpoint
        - name: ca.url
          description: URL of the CA server
        - name: client.address
          description: Public address of the test client
      brooklyn.children:
      - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
        command:
          $brooklyn:formatString:
          - |
            echo "[TEST] Running in $(pwd)"
            IP=%s; # client.address
            CA=%s; # ca.url
            SWARM_URL=%s; # swarm.url
            mkdir -p certs
            echo "[TEST] Getting certificates from ${ca}"
            curl -X POST ${ca}/generate/${IP}
            curl ${CA}/cert/${IP}/ca.pem > certs/ca.pem
            curl ${CA}/cert/${IP}/cert.pem > certs/cert.pem
            curl ${CA}/cert/${IP}/key.pem > certs/key.pem
            TLS_OPTIONS="--tlsverify --tlscacert=certs/ca.pem --tlscert=certs/cert.pem --tlskey=certs/key.pem"
            echo "[TEST] Connecting to ${SWARM_URL} with TLS options ${TLS_OPTIONS}"
            docker -H ${SWARM_URL} ${TLS_OPTIONS} ps -a
          - $brooklyn:config("client.address")
          - $brooklyn:config("ca.url")
          - $brooklyn:config("swarm.url")
        assertStatus:
          equals: 0
        assertOut:
          contains: "/swarm join"

  - id: test-docker-run-pulls
    item:
      type: org.apache.brooklyn.test.framework.TestCase
      name: Test that Docker Swarm cluster can pull containers from docker hub automatically
      brooklyn.parameters:
        - install.dir
        - swarm.url
      brooklyn.children:
      - type: ssh-test
        command:
          $brooklyn:formatString:
          - |
            set -e
            INSTALL_DIR=%s
            SWARM_URL=%s
            TLS_OPTIONS="--tlsverify --tlscacert=.certs/ca.pem --tlscert=.certs/cert.pem --tlskey=.certs/key.pem"
            DOCKER="docker -H $SWARM_URL $TLS_OPTIONS"
             
            cd $INSTALL_DIR
            $DOCKER rmi busybox || true # OK to fail
            ! $DOCKER images | grep busybox
            $DOCKER run --rm busybox echo Hello from busybox-image | grep busybox-image && $DOCKER images | grep busybox
          - $brooklyn:config("install.dir")
          - $brooklyn:config("swarm.url")
        assertStatus:
          equals: 0
        assertOut:
          contains: "busybox-image"

  - id: test-network-exists
    item:
      type: test-connect-succeeds-with-tls
      name: Test Network Exists
      brooklyn.parameters:
        - name: network.name
          description: Name of the network
      brooklyn.children:
      - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
        command:
          $brooklyn:formatString:
          - |
            SWARM_URL=%s; # swarm.url
            NETWORK=%s; # network.name
            TLS_OPTIONS="--tlsverify --tlscacert=certs/ca.pem --tlscert=certs/cert.pem --tlskey=certs/key.pem"
            echo "[TEST] Checking ID of network ${NETWORK}"
            docker -H ${SWARM_URL} ${TLS_OPTIONS} network inspect --format "{{.ID}}" "${NETWORK}"
          - $brooklyn:config("swarm.url")
          - $brooklyn:config("network.name")
        assertStatus:
          equals: 0

